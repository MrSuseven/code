#Redis3安装
    1. tar -zxvf redis-3.0.7.tar.gz
    2. 进入解压目录下, 执行make指令
          2.1 make[2]: cc: Command not found                                           
                  没有安装gcc           
                  yum install gcc
          2.2 zmalloc.h:51:31: error: jemalloc/jemalloc.h: No such file or directory
                  一些编译依赖或原来编译遗留出现的问题
                  make distclean + make
    3. make test
          3.1 couldn't execute "tclsh8.5": no such file or directory
                  没有安装tcl
                  yum install -y tcl
    4. make install
    5. 测试启动
          5.1 redis-server
          5.2 cp redis.conf /usr/local/redis/7000/7000.conf
              vi 7000.conf
                  daemonize yes
                  pidfile /usr/local/redis/7000/7000.pid
                  logfile /usr/local/redis/7000/7000.log
                  dir /usr/local/redis/7000
                  port 7000
              redis-server /usr/local/redis/7000/7000.conf   
    6. redis-cli -p 7000 -h 192.168.1.103      
    7. port 7000                                  #端口
       daemonize yes                              #守护进程模式启动
       cluster-enabled yes                        #是否支持集群
       cluster-config-file nodes-7000.conf        #集群配置文件名
       pidfile /usr/local/redis/7000/redis.pid    #进程id存储位置
       logfile /usr/local/redis/7000/redis.log    #日志文件存储位置
       dir /usr/local/redis/7000                  #工作目录
#Nginx安装
    1. tar -zvxf nginx-1.7.4.tar.gz
    2. 进入解压目录, 执行./configure
          ./configure error
          yum -y install gcc
          再次执行./configure
          ./configure error
          yum install pcre-devel
          再次执行./configure
          ./configure error
          yum install zlib-devel
          再次执行./configure
    3. OK   
#Tomcat集群
    1. 克隆
          1.1 删除UUID 和 HWARRD 所在行
          1.2 rm -rf /etc/udev/rules.d/70-persistent-net.rules
          1.3 chkconfig iptables off      永久关闭防火墙
          1.4 hostname xxx  ,  vi /etc/sysconfig/network  修改主机名
          1.5 reboot
    2. 注意：已安装的软件
          2.1 mysql
          2.2 nginx的所有依赖，但不包含nginx
          2.3 redis的所有依赖，但不包含redis
          2.4 jdk
    3. 在多个主机上安装Tomcat
    4. 前提：安装好nginx
          4.1 指令所在路径：/usr/local/nginx/sbin
                 ./nginx            即可开启nginx
                 ./nginx -s stop    即可关闭nginx
                 ./nginx -s reload  即可重启nginx
          4.2 配置所在位置：/usr/local/nginx/conf/nginx.conf 
    5. nginx的配置文件中
          5.1 upstream tomcat-servers {
			            server 192.168.0.103:8989;
		            	server 192.168.0.103:8990;
              }
          5.2 location /项目名 {
			            proxy_pass http://tomcat-serversZHJ;
	            }  
    6. 启动所有tomcat节点,启动nginx
          访问：当前系统ip/项目
    7. 负载均衡
          7.1 默认： 轮询
                  upstream tomcat-servers {
			                server 192.168.0.103:8989;
			                server 192.168.0.103:8990;
		              }
          7.2 iphash：基于ip的负载均衡
                  upstream tomcat-servers {
		                	ip_hash;
		                 	server 192.168.0.103:8989;
			                server 192.168.0.103:8990;
		              }
          7.3 权重轮询:
                  upstream tomcat-servers {
			                server 192.168.0.103:8989 weight=1;
			                server 192.168.0.103:8990 weight=2;
		              }
          7.4 最小连接数：
                  upstream tomcat-servers {
			                least_conn;
			                server 192.168.0.103:8989;
			                server 192.168.0.103:8990;
	              	}
#session丢失问题
    1. 在tomcat的lib中引入
          1.1 commons-pool2-2.2.jar
          1.2 jedis-2.8.1.jar
          1.3 tomcat-redis-session-manage-tomcat7.jar
    2. 在tomcat的context.xml中添加
          <!--  告知tomcat session由redis管理 -->
	        <Valve  className = "com.orangefunction.tomcat.redissessions.RedisSessionHandlerValve"/>
	        <!-- 告知redis的所在位置：host=ip   port=端口 -->
	        <Manager  className = "com.orangefunction.tomcat.redissessions.RedisSessionManager"
	                	host = "192.168.1.102"  
		                port="9991"  
		                database="0"/>
          注意：添加时需删除注释
#Mysql主从搭建
    注：主机和从机上的库名一致
    1. 安装两个mysql 分别预设为以后的主机和从机
    2. 配置
          2.1 主机配置： 【/etc/my.cnf】
                 在[mysqld]下配置：
	                  	server-id=9            //id
		                  log-bin=zhj-bin        //二进制日志文件的名称
		                  binlog-do-db=db9       //要记录二进制日志的数据库，可以有多个，如下
		                  #binlog_format=MIXED   //兼容 日志和read-commit
		                  #binlog-do-db=db10
		                  #binlog-do-db=db11 
		                  #binlog-ignore-db=xx   //不记录二进制日志的数据库
		                  expire_logs_days=10   
          2.2 重启主机：service mysqld restart
          2.3 查看主机状态
                  mysql>show master status;
		              注：记录下file字段值，和position字段值，要告知给从机
          2.4 从机配置： 【/etc/my.cnf】
                 在[mysqld]下：
	                    server-id=10
		                  replicate-do-db=db9
		                  master-connect-retry=60
          2.5 同步主从
                 mysqldump -u root -h 192.168.1.66 -p db9 > /root/hh.sql    导出主机数据
                 在从机中创建数据库：db9
                 mysql> source /root/db9.sql                                导入数据
          2.6 从机备份
                 service mysqld restart
                 slave stop;                                                停止slave同步进程
                 change master to master_host='192.168.1.66',master_user='root',master_password='123',master_log_file='zhj-bin.000001',master_log_pos=106;
                 slave start;                                               开启slave同步进程
                 SHOW SLAVE STATUS\G                                        查看slave同步信息
                      Slave_IO_Running: Yes
				              Slave_SQL_Running: Yes
                      以上这两个参数的值为Yes，即说明配置成功
    3. 从机不能有写入动作，否则会导致同步
          解决方案：在从机  mysql>show slave status\G 查看错误,找到从机中导致冲突的数据, 将其删除, 即可使备份过程回归正常
    4. mysql的bin-log和read-commit有冲突，需要在my.cnf的[mysqld]中配置：
          binlog_format=mixed
